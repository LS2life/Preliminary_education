<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<!-- 프로젝트 그룹 ID -->
		<groupId>org.springframework.boot</groupId>
		<!-- 프로젝트 아티팩트 ID -->
		<!-- 의존성 조합간 충돌 문제가 없는 검증된 버전 정보 조합 제공 라이브러리-->
		<artifactId>spring-boot-starter-parent</artifactId>
		<!-- 프로젝트 버전 -->
		<version>2.6.7</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>blog</artifactId>
	<version>1.0.0</version>
	<!-- 프로잭트명 -->
	<name>blog</name>
	<!-- 프로젝트 설명 -->
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>8</java.version>
	</properties>
	<!-- 라이브러리 의존성 정보를 가지고 있는 dependency 태그를 묶은 태그 -->
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- 각 라이브러리의 정보를 담는 태그 -->
		<dependency>
			<!-- 의존성 라이브러리 그룹 ID -->
			<groupId>org.springframework.boot</groupId>
			<!-- 의존성 라이브러리의 아티팩트 ID -->
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<!-- Spring MVC를 사용한 REST 서비스를 개발하는데 사용하는 라이브러리 -->
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<!-- 
				해당 라이브러리의 이용범위 지정
				compile(default), 
				provided : compile과 유사하나 JDK 또는 Container가 Runtime 시에만 제공
							컴파일 혹은 테스트 경로에서만 사용하며, 배포시에는 미포함.,
				runtime : 컴파일시에는 불용, 실행상황에서만 사용.
							런타임과 경로에서는 있으나, 컴파일클래스 경로에는 부재.,
				test : 테스트 상황에서만 사용되는 라이브러리,
				system: systemPath추가 작성필요. provide와 유사하나 저장소에서 관리되지 않고 직접관리하는 JAR을 추가.
			-->
			<scope>runtime</scope>
			<!-- 다른 프로젝트에서 이 프로젝트를 의존성 설정을 할 경우 사용할지 결정 -->
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<!-- JUnit, Hamcrest, Mockito를 포함한 테스트기능 라이브러리 -->
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mustache</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>